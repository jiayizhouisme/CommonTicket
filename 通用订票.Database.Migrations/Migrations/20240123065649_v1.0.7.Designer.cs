// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using 通用订票.EntityFramework.Core;

#nullable disable

namespace 通用订票.Database.Migrations.Migrations
{
    [DbContext(typeof(MyDefaultDbContext))]
    [Migration("20240123065649_v1.0.7")]
    partial class v107
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("sale")
                        .HasColumnType("int");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("stockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("objectId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Exhibition", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("basicPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Exhibition");

                    b.HasData(
                        new
                        {
                            id = new Guid("33d09127-6044-4b40-a394-9968d7e132c4"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9189),
                            isDeleted = false,
                            name = "展馆0",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d772c8d4-0cc9-40c1-ad8d-8376911dcfca"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9204),
                            isDeleted = false,
                            name = "展馆1",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("c03afb6c-9dda-492f-87f0-de11cb730bdc"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9206),
                            isDeleted = false,
                            name = "展馆2",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("05404c19-8e46-4b19-b896-1d96b3a88421"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9207),
                            isDeleted = false,
                            name = "展馆3",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d49baf0e-f684-4e54-89ac-d73c2126c40b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9208),
                            isDeleted = false,
                            name = "展馆4",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ef0c1c37-2da2-4644-a684-269e244aef9f"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9211),
                            isDeleted = false,
                            name = "展馆5",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("754b2502-db47-49dd-b108-da96e49cad14"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9212),
                            isDeleted = false,
                            name = "展馆6",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("0057133f-c267-4ff9-bab2-9a7abe240fea"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9213),
                            isDeleted = false,
                            name = "展馆7",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("53ba1115-40c7-4323-9f36-37265ca6b9bc"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9217),
                            isDeleted = false,
                            name = "展馆8",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("45687701-d996-44b6-9df6-d5cfe4d7a729"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9218),
                            isDeleted = false,
                            name = "展馆9",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("774643d8-ad21-4edc-b5fe-cb598558be54"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9220),
                            isDeleted = false,
                            name = "展馆10",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d139f7fc-4c31-416b-a7a0-4b74fa833048"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9221),
                            isDeleted = false,
                            name = "展馆11",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b9c13f32-564d-4210-8d1b-14478c78a365"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9222),
                            isDeleted = false,
                            name = "展馆12",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d1e53726-d01a-4bea-827a-79ead0780087"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9223),
                            isDeleted = false,
                            name = "展馆13",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("737716ee-d000-472b-bdb7-2e9fc29f19a2"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9224),
                            isDeleted = false,
                            name = "展馆14",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b60eacd1-6502-4a5f-b8ab-bc772bb157c5"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9225),
                            isDeleted = false,
                            name = "展馆15",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("2ea9e21f-0684-43e7-9630-debf6b7382f9"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9228),
                            isDeleted = false,
                            name = "展馆16",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("54b6d460-9169-4729-9d66-9b0e3899cc82"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9230),
                            isDeleted = false,
                            name = "展馆17",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("a89f6614-4b24-47a4-a507-1e89c55bc3ce"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9231),
                            isDeleted = false,
                            name = "展馆18",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b8f5edc6-2c74-4590-9a84-958cc3e29de5"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9232),
                            isDeleted = false,
                            name = "展馆19",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("46cf3f5d-9037-49fb-8c3c-8a9c06076d05"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9233),
                            isDeleted = false,
                            name = "展馆20",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d5ca8766-10c5-42d4-a924-706f4dc6b593"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9266),
                            isDeleted = false,
                            name = "展馆21",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("eb9f704d-4c32-461d-9a59-f74017bbc2a6"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9267),
                            isDeleted = false,
                            name = "展馆22",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("874b3cdf-bf8a-4963-bffe-fb2300e929fa"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9268),
                            isDeleted = false,
                            name = "展馆23",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("4fe2ba53-7f55-4ab9-9444-1b6c12f4d954"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9271),
                            isDeleted = false,
                            name = "展馆24",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("100ef993-829c-4a41-9aa2-75057784a1e5"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9272),
                            isDeleted = false,
                            name = "展馆25",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("bca2aedd-8a27-4cb3-a5d7-4107d1a30fd4"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9273),
                            isDeleted = false,
                            name = "展馆26",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("af5588be-c4ce-426b-bd99-0475a166f62d"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9274),
                            isDeleted = false,
                            name = "展馆27",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("de2b039b-3716-4c5c-9b4e-27fc843a1938"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9275),
                            isDeleted = false,
                            name = "展馆28",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ad42985a-ec3f-4b64-a180-b613cf03bc87"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 14, 56, 48, 572, DateTimeKind.Local).AddTicks(9276),
                            isDeleted = false,
                            name = "展馆29",
                            status = 1
                        });
                });

            modelBuilder.Entity("通用订票.Core.Entity.Order", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("payedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("trade_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("stauts")
                        .HasColumnType("int");

                    b.Property<string>("ticketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.HasIndex("TUserId");

                    b.HasIndex("startTime", "endTime", "TUserId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("通用订票.Core.Entity.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("authLevel")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("idCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("parameters")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("payTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payedMsg")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("paymentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sourceId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("tradeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("WechatBill");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Exhibition", "exhibition")
                        .WithMany()
                        .HasForeignKey("objectId")
                        .IsRequired();

                    b.Navigation("exhibition");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.HasOne("通用订票.Core.Entity.UserInfo", "userInfo")
                        .WithMany()
                        .HasForeignKey("TUserId")
                        .IsRequired();

                    b.Navigation("userInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.HasOne("通用订票.Core.Entity.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });
#pragma warning restore 612, 618
        }
    }
}
