// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using 通用订票.EntityFramework.Core;

#nullable disable

namespace 通用订票.Database.Migrations.Migrations
{
    [DbContext(typeof(MyDefaultDbContext))]
    [Migration("20240123084856_v1.1.1")]
    partial class v111
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("sale")
                        .HasColumnType("int");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("stockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("objectId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Exhibition", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("basicPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Exhibition");

                    b.HasData(
                        new
                        {
                            id = new Guid("03ea0dd6-ef4e-4d43-aede-1363af5238c1"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2909),
                            isDeleted = false,
                            name = "展馆0",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("02522d9d-8d5e-4c95-828f-b968e11773d3"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2930),
                            isDeleted = false,
                            name = "展馆1",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("2ce30480-9e69-4689-ae7c-3586431775fe"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2931),
                            isDeleted = false,
                            name = "展馆2",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("f13c0afb-4c38-4278-8964-932b15a9f3b9"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2933),
                            isDeleted = false,
                            name = "展馆3",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b7776a3f-83e5-44c4-8c31-1c8ee9d21ad0"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2934),
                            isDeleted = false,
                            name = "展馆4",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("27f13de8-da4e-46f8-8231-09ce70126858"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2945),
                            isDeleted = false,
                            name = "展馆5",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("121d3512-9d2d-4105-b32c-1c68581b2e76"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2946),
                            isDeleted = false,
                            name = "展馆6",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("a479a1b3-4d3a-4f7f-a848-75a5ccc4725b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2947),
                            isDeleted = false,
                            name = "展馆7",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("1a63bb5a-a01e-4ba0-83f9-3a8dab2b5fb9"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2948),
                            isDeleted = false,
                            name = "展馆8",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ae3fe0f2-26b5-4de5-8169-80a69bf0eac1"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2950),
                            isDeleted = false,
                            name = "展馆9",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("1afe5652-e789-40d9-be19-eddf9a029cb4"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2952),
                            isDeleted = false,
                            name = "展馆10",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("a4b76a29-bfe0-4ce3-9c5f-a2a0c4661141"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2953),
                            isDeleted = false,
                            name = "展馆11",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("78810c7d-1b68-4093-b36e-67f063da5667"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2954),
                            isDeleted = false,
                            name = "展馆12",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ac1a14b8-a4c2-4e5f-b1e2-54622d66d55f"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2957),
                            isDeleted = false,
                            name = "展馆13",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("3b8ae92b-6aa2-45bf-ac37-357255e6cbef"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2959),
                            isDeleted = false,
                            name = "展馆14",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("35bf73db-c633-425a-98ed-b9de9231fef7"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2960),
                            isDeleted = false,
                            name = "展馆15",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("9450312f-b714-49b7-80ec-f1a320e491c3"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2961),
                            isDeleted = false,
                            name = "展馆16",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("8bd5f6e3-f551-483a-8749-544d2e43926b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2963),
                            isDeleted = false,
                            name = "展馆17",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("930801e3-f155-4621-9fc7-2e31fdc717ba"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2964),
                            isDeleted = false,
                            name = "展馆18",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("f8cacbb5-d442-4fe8-8463-e3bfd8921d46"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2965),
                            isDeleted = false,
                            name = "展馆19",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ba7acc6a-acf8-4942-82c8-378de432f570"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2966),
                            isDeleted = false,
                            name = "展馆20",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("5b28f01b-9c08-4a91-8c63-66420e854f98"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2969),
                            isDeleted = false,
                            name = "展馆21",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("3c64b8a4-2e14-4066-bab3-04c2d7298992"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2970),
                            isDeleted = false,
                            name = "展馆22",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d6c40fbb-e1b9-410d-8cdb-ca35f3cfda8f"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2971),
                            isDeleted = false,
                            name = "展馆23",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("c3547a92-ed1c-4f11-92d0-24f6452f79af"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2972),
                            isDeleted = false,
                            name = "展馆24",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("78818101-7cc6-41be-95c5-d35add495709"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2973),
                            isDeleted = false,
                            name = "展馆25",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("f8329b39-84d8-43e5-8aec-f65bdf36298d"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2974),
                            isDeleted = false,
                            name = "展馆26",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("e0e332d3-1193-46c0-971f-0ece48e2fb11"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2975),
                            isDeleted = false,
                            name = "展馆27",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d2d326cd-3606-4df3-a26c-5a8067bc4f90"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2977),
                            isDeleted = false,
                            name = "展馆28",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("5b60749d-e6b5-412b-a5dc-9ae868b32dcb"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 48, 56, 61, DateTimeKind.Local).AddTicks(2979),
                            isDeleted = false,
                            name = "展馆29",
                            status = 1
                        });
                });

            modelBuilder.Entity("通用订票.Core.Entity.Order", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("payedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("trade_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.HasIndex("trade_no");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("objectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("stauts")
                        .HasColumnType("int");

                    b.Property<string>("ticketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.HasIndex("TUserId");

                    b.HasIndex("startTime", "endTime", "TUserId", "objectId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("通用订票.Core.Entity.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("authLevel")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("idCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("parameters")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("payTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payedMsg")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("paymentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sourceId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("tradeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("WechatBill");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Exhibition", "exhibition")
                        .WithMany()
                        .HasForeignKey("objectId")
                        .IsRequired();

                    b.Navigation("exhibition");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.HasOne("通用订票.Core.Entity.UserInfo", "userInfo")
                        .WithMany()
                        .HasForeignKey("TUserId")
                        .IsRequired();

                    b.Navigation("userInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.HasOne("通用订票.Core.Entity.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });
#pragma warning restore 612, 618
        }
    }
}
