// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using 通用订票.EntityFramework.Core;

#nullable disable

namespace 通用订票.Database.Migrations.Migrations
{
    [DbContext(typeof(MyDefaultDbContext))]
    [Migration("20240123083405_v1.1.0")]
    partial class v110
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("sale")
                        .HasColumnType("int");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("stockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("objectId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Exhibition", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("basicPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Exhibition");

                    b.HasData(
                        new
                        {
                            id = new Guid("a4d6eb88-5b26-4985-b7da-55d5269556db"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6856),
                            isDeleted = false,
                            name = "展馆0",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("5c6c0611-9f6d-45fe-a08c-a6270284d373"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6893),
                            isDeleted = false,
                            name = "展馆1",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("41205128-1d31-4ae5-8788-1ab2adde3bd2"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6896),
                            isDeleted = false,
                            name = "展馆2",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("fc4bf425-f575-4161-b222-f874500c72ee"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6897),
                            isDeleted = false,
                            name = "展馆3",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d1e9bc60-cbfa-43b6-ab9c-e74bf739d81b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6899),
                            isDeleted = false,
                            name = "展馆4",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("7091ef70-feff-404b-96ee-57c5c1cc288a"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6903),
                            isDeleted = false,
                            name = "展馆5",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b785b181-4a15-4d98-a12d-9af6d46d46ed"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6904),
                            isDeleted = false,
                            name = "展馆6",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b299425e-dad7-480d-988b-6999640a2b91"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6914),
                            isDeleted = false,
                            name = "展馆7",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("f889862f-0320-4d0d-a71b-085d6a06f534"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6916),
                            isDeleted = false,
                            name = "展馆8",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("386f0e6d-2fd4-4892-ba1b-aaf8b1799acb"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6919),
                            isDeleted = false,
                            name = "展馆9",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("a720f471-75c8-4e24-9f0d-7e46887043cf"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6921),
                            isDeleted = false,
                            name = "展馆10",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("9005203d-1677-4774-a749-b52b68cf7d0d"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6922),
                            isDeleted = false,
                            name = "展馆11",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("07254981-fb4c-496b-a0d1-e86617b3465c"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6924),
                            isDeleted = false,
                            name = "展馆12",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("0f40502a-f924-4ac8-a2a8-15129a1a4e43"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6926),
                            isDeleted = false,
                            name = "展馆13",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("2342f3b7-523a-41ac-b86c-1e2cb40a978d"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6927),
                            isDeleted = false,
                            name = "展馆14",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("0cf7b6d5-c478-4a04-ad37-16356f0771b7"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6931),
                            isDeleted = false,
                            name = "展馆15",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b7739784-9688-43fc-bfb8-09097d17ec20"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6933),
                            isDeleted = false,
                            name = "展馆16",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("490cf55e-6676-4186-9ef5-54700ed1461b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6937),
                            isDeleted = false,
                            name = "展馆17",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("aec0835a-c09a-462c-b333-dd5e24df4f80"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6939),
                            isDeleted = false,
                            name = "展馆18",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("355b6ef7-44f4-46f9-a3fa-2064bb7da9e9"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6940),
                            isDeleted = false,
                            name = "展馆19",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("2cec4c39-c2fa-483c-90b4-00f7d710faaf"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6941),
                            isDeleted = false,
                            name = "展馆20",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("1f687963-6f77-408f-b161-98d363059f77"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6943),
                            isDeleted = false,
                            name = "展馆21",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("bdcb79e8-56bf-4dd6-9a9b-1ddff7a1ee06"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6944),
                            isDeleted = false,
                            name = "展馆22",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("96dfba80-9ee1-4c6d-962c-4d07fc91fa1a"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6948),
                            isDeleted = false,
                            name = "展馆23",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("421be45c-68ca-47b2-8691-4922f95051b8"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6949),
                            isDeleted = false,
                            name = "展馆24",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("56b3fae1-7813-4ccd-af51-440fdbd2b3cf"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6950),
                            isDeleted = false,
                            name = "展馆25",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("bdbbf235-14c4-4680-b459-959bbdab628d"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6952),
                            isDeleted = false,
                            name = "展馆26",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("fcc5fefb-7381-4e25-9d97-f9a5ebd4147b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6953),
                            isDeleted = false,
                            name = "展馆27",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("4be2c2fe-beee-4384-a015-a17d9f158180"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6954),
                            isDeleted = false,
                            name = "展馆28",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("953ccf5d-155b-449e-bbce-8a19e4caa909"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 16, 34, 5, 7, DateTimeKind.Local).AddTicks(6956),
                            isDeleted = false,
                            name = "展馆29",
                            status = 1
                        });
                });

            modelBuilder.Entity("通用订票.Core.Entity.Order", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("payedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("trade_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.HasIndex("trade_no");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("objectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("stauts")
                        .HasColumnType("int");

                    b.Property<string>("ticketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.HasIndex("TUserId");

                    b.HasIndex("startTime", "endTime", "TUserId", "objectId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("通用订票.Core.Entity.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("authLevel")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("idCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("parameters")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("payTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payedMsg")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("paymentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sourceId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("tradeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("WechatBill");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Exhibition", "exhibition")
                        .WithMany()
                        .HasForeignKey("objectId")
                        .IsRequired();

                    b.Navigation("exhibition");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.HasOne("通用订票.Core.Entity.UserInfo", "userInfo")
                        .WithMany()
                        .HasForeignKey("TUserId")
                        .IsRequired();

                    b.Navigation("userInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.HasOne("通用订票.Core.Entity.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });
#pragma warning restore 612, 618
        }
    }
}
