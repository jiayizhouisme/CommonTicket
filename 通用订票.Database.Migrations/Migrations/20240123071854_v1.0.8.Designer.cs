// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using 通用订票.EntityFramework.Core;

#nullable disable

namespace 通用订票.Database.Migrations.Migrations
{
    [DbContext(typeof(MyDefaultDbContext))]
    [Migration("20240123071854_v1.0.8")]
    partial class v108
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<string>("brief")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("sale")
                        .HasColumnType("int");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("stockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("objectId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Exhibition", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("basicPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Exhibition");

                    b.HasData(
                        new
                        {
                            id = new Guid("4ed6b9b3-4584-4e3d-a1dc-791546fed9f9"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4059),
                            isDeleted = false,
                            name = "展馆0",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("33db0a37-416b-46f6-ad18-d43e341daf40"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4073),
                            isDeleted = false,
                            name = "展馆1",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ddce1676-0ffd-41fc-8b36-d0356e6e0e6f"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4087),
                            isDeleted = false,
                            name = "展馆2",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("bd3d8e68-d79f-4c52-8420-6fc447e8fe00"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4088),
                            isDeleted = false,
                            name = "展馆3",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("ea366433-74e2-4429-a702-fccfdc223ef4"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4089),
                            isDeleted = false,
                            name = "展馆4",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("1f79cb85-8a97-4112-8510-649163fdb639"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4091),
                            isDeleted = false,
                            name = "展馆5",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b837b254-f091-4a18-80ea-da66e02f9d1b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4092),
                            isDeleted = false,
                            name = "展馆6",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("4696b35e-9358-4c57-b847-464fed6e6640"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4093),
                            isDeleted = false,
                            name = "展馆7",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("34fb8b7e-5136-4740-adea-95f1a9c4b45b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4094),
                            isDeleted = false,
                            name = "展馆8",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("b2c88838-a45c-4fc4-9101-758fd7477ba3"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4096),
                            isDeleted = false,
                            name = "展馆9",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("4ee67853-4169-4451-8b0f-d3f0e998c7ca"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4099),
                            isDeleted = false,
                            name = "展馆10",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d69b6be1-3cc0-4f1d-8004-5e0fcf1ddb6b"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4099),
                            isDeleted = false,
                            name = "展馆11",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("6e2e5918-fd88-46de-9bbb-df88b99bad76"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4100),
                            isDeleted = false,
                            name = "展馆12",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("795966f7-ffa6-4f51-95a4-3565879bb2cd"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4101),
                            isDeleted = false,
                            name = "展馆13",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("c7431144-a585-453e-afc6-f539492d33a3"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4102),
                            isDeleted = false,
                            name = "展馆14",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("44f363fb-0185-46c1-a75d-bb145a026ec8"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4103),
                            isDeleted = false,
                            name = "展馆15",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("5dd82b1c-cd7b-4a6d-9665-d76b31f0c1db"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4104),
                            isDeleted = false,
                            name = "展馆16",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("68a52747-132f-49cc-a631-e0ce4124f71d"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4106),
                            isDeleted = false,
                            name = "展馆17",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("f9496255-e8ef-4d8e-a452-43a0664a0317"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4108),
                            isDeleted = false,
                            name = "展馆18",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("147ea712-2302-48d2-9f68-cbcbe3bde8cc"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4109),
                            isDeleted = false,
                            name = "展馆19",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("d1797bee-8787-4ec3-b018-e0326fa458ea"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4110),
                            isDeleted = false,
                            name = "展馆20",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("3d66ba02-7d75-41d2-a8da-eded810b819f"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4110),
                            isDeleted = false,
                            name = "展馆21",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("706bd6bf-8fa1-4526-83ff-5b77ed38581e"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4111),
                            isDeleted = false,
                            name = "展馆22",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("80b9a62e-2228-474e-924a-a3196634c1b5"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4112),
                            isDeleted = false,
                            name = "展馆23",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("fb5a986f-d93d-4ea8-8c76-00d17be67126"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4113),
                            isDeleted = false,
                            name = "展馆24",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("c40aff43-9651-4aad-93ce-818487b122de"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4114),
                            isDeleted = false,
                            name = "展馆25",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("777dfb3a-b3d7-4b0a-afe3-1db2d6d67d5c"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4116),
                            isDeleted = false,
                            name = "展馆26",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("9b091e2d-1592-494e-b275-ee20e2b2fdde"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4117),
                            isDeleted = false,
                            name = "展馆27",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("5218e573-aa65-4c98-a600-e4a2f0abb1af"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4118),
                            isDeleted = false,
                            name = "展馆28",
                            status = 1
                        },
                        new
                        {
                            id = new Guid("2c5f0c40-4c97-4b74-a0c9-593ecd533e0f"),
                            basicPrice = 10m,
                            createTime = new DateTime(2024, 1, 23, 15, 18, 53, 483, DateTimeKind.Local).AddTicks(4118),
                            isDeleted = false,
                            name = "展馆29",
                            status = 1
                        });
                });

            modelBuilder.Entity("通用订票.Core.Entity.Order", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("payedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("trade_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.Property<int>("_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("objectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("stauts")
                        .HasColumnType("int");

                    b.Property<string>("ticketNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("_id");

                    b.HasIndex("TUserId");

                    b.HasIndex("startTime", "endTime", "TUserId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("通用订票.Core.Entity.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("authLevel")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("idCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("id");

                    b.HasIndex("userID");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ip")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("money")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("orderId")
                        .HasColumnType("int");

                    b.Property<string>("parameters")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("payTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("payedMsg")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("paymentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("sourceId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("tradeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("orderId");

                    b.ToTable("WechatBill");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Appointment", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Exhibition", "exhibition")
                        .WithMany()
                        .HasForeignKey("objectId")
                        .IsRequired();

                    b.Navigation("exhibition");
                });

            modelBuilder.Entity("通用订票.Core.Entity.Ticket", b =>
                {
                    b.HasOne("通用订票.Core.Entity.UserInfo", "userInfo")
                        .WithMany()
                        .HasForeignKey("TUserId")
                        .IsRequired();

                    b.Navigation("userInfo");
                });

            modelBuilder.Entity("通用订票.Core.Entity.UserInfo", b =>
                {
                    b.HasOne("通用订票.Core.Entity.User", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("通用订票.Core.Entity.WechatBill", b =>
                {
                    b.HasOne("通用订票.Core.Entity.Order", "order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("order");
                });
#pragma warning restore 612, 618
        }
    }
}
