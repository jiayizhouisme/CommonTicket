// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _222222;

#nullable disable

namespace VisitForm1.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20241203085945_2.0.0")]
    partial class _200
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VisitForm1._222222.Model.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserInfosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserInfosId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ObjectId")
                        .HasColumnType("int");

                    b.Property<string>("TradeNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserInfoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserInfoId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserInfoId1");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.UserInfos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("TicketId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("VisitForm1._222222.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建时间");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("openId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("用户权限等级");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("微信openid");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_222222.Model.Exhibition", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("basicPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("价格");

                    b.Property<int?>("beforeDays")
                        .HasColumnType("int")
                        .HasComment("景区提前预约天数");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2")
                        .HasComment("创建日期");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("景区介绍");

                    b.Property<string>("exhibitions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("forbiddenRule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("景区封面");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("isMultiPart")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("景区名");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Exhibitions");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.Appointment", b =>
                {
                    b.HasOne("VisitForm1._222222.Model.UserInfos", null)
                        .WithMany("Appointments")
                        .HasForeignKey("UserInfosId");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.Ticket", b =>
                {
                    b.HasOne("VisitForm1._222222.Model.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisitForm1._222222.Model.Order", null)
                        .WithMany("Tickets")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisitForm1._222222.Model.UserInfos", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appointment");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.UserInfos", b =>
                {
                    b.HasOne("VisitForm1._222222.Model.Appointment", "Appointment")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisitForm1._222222.Model.Ticket", null)
                        .WithMany("UserInfos")
                        .HasForeignKey("TicketId");

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.Order", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.Ticket", b =>
                {
                    b.Navigation("UserInfos");
                });

            modelBuilder.Entity("VisitForm1._222222.Model.UserInfos", b =>
                {
                    b.Navigation("Appointments");
                });
#pragma warning restore 612, 618
        }
    }
}
